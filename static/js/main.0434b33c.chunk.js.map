{"version":3,"sources":["Key.js","Calculator.js","App.js","index.js"],"names":["Key","keyboardKey","color","onTap","className","onClick","style","Calculator","operations","useState","screenDigit","setscreenDigit","historyLog","sethistoryLog","onButtonClick","button","includes","charAt","prev","console","log","onOperationButtonClick","operationKey","checker","forEach","e","endsWith","generateRandomColor","randomColor","Math","floor","random","toString","reverse","map","history","length","wordWrap","fontSize","randomNum","num","result","Function","toFixed","substring","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0434b33c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Calculator.css'\r\nfunction Key({keyboardKey,color,onTap}) {\r\n    return (\r\n        <div className=\"key\" onClick={onTap} >\r\n            <p style={{color:color}}>{keyboardKey}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key\r\n","import {React, useState} from 'react'\r\nimport Key from './Key'\r\nimport './Calculator.css'\r\nfunction Calculator() {\r\n    const nums=[1,2,3,4,5,6,7,8,9];\r\n    const operationKeys=['/','*','-','+'];\r\n    const operations=['/','*','-','+','%','.'];\r\n    const [screenDigit, setscreenDigit] = useState('0');\r\n    const [historyLog, sethistoryLog] = useState([]);\r\n\r\n    const onButtonClick=(button) =>{  \r\n        if (button==='.' && screenDigit.includes('.')) {\r\n            return\r\n        }\r\n        if (screenDigit.charAt(0)==='0') {\r\n            setscreenDigit('')\r\n        }\r\n        setscreenDigit(prev=>prev + button);\r\n\r\n        console.log(screenDigit);\r\n    }\r\n    const onOperationButtonClick=(operationKey)=>{\r\n        let checker=false;\r\n        const setbool=(e)=>{\r\n        if(screenDigit.endsWith(e)){ checker=true}\r\n        }\r\n        operations.forEach(setbool);\r\n        if (checker) return\r\n        setscreenDigit(screenDigit + operationKey);\r\n    }\r\n   \r\n    const clearScreen=()=>{\r\n        setscreenDigit('0')\r\n    }\r\n    function evil(fn) {\r\n        return new Function('return ' + fn)();\r\n      }\r\n      \r\n    const calulateResult=()=>{\r\n        if (screenDigit.length===1) return\r\n        let result =evil(screenDigit);\r\n        setscreenDigit(result.toFixed(3).toString())\r\n        sethistoryLog([...historyLog,`${screenDigit}=${result}`])\r\n    }\r\n    const randomNum=()=>{\r\n        let randomNum=Math.random()*10;\r\n        setscreenDigit(screenDigit + Math.floor(randomNum));\r\n    }\r\n    const backSpace=()=>{\r\n        console.log('hi');\r\n        console.log(screenDigit.substring(0,screenDigit.length-1));\r\n        setscreenDigit(prev=>prev.substring(0, screenDigit.length - 1));\r\n    }\r\n    const generateRandomColor=()=>{\r\n        let randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n        return `#${randomColor}`;\r\n    }\r\n    return (\r\n        <div className=\"calculator\">\r\n            <div className=\"history-log hidden\">\r\n                {historyLog.reverse().map(history=><h2 style={{color:generateRandomColor()}}>{history}</h2>)}\r\n            </div>\r\n            <div className=\"calculator-body\">\r\n                <div className=\"screen\">\r\n                    <h4>{historyLog[historyLog.length-1]}</h4>\r\n                    <div className=\"result\" style={{wordWrap:\"break-word\"}}>\r\n                    <h2 style={{fontSize:'50px'}}>{screenDigit}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"keyboard\">\r\n                    <div className=\"top-pad\">\r\n                    <Key keyboardKey='AC' onTap={clearScreen} color='#229A89' />\r\n                    <Key keyboardKey='%' onTap={()=>onOperationButtonClick('%')} color='#229A89' />\r\n                    <Key keyboardKey={'Random'} onTap={randomNum}/>\r\n\r\n                    </div>\r\n                    <div className=\"numbers-key\">\r\n                        <div className=\"numbers-key-grid\">\r\n                            {nums.reverse().map(num=><Key key={num}  keyboardKey={num} onTap={()=>onButtonClick(num)}/>)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"operation-key\">\r\n                        {operationKeys.map(operationKey=><Key key={operationKey} onTap={()=>onOperationButtonClick(operationKey)} color='#D26C6F' keyboardKey={operationKey}/> )}\r\n                        <Key keyboardKey='=' onTap={calulateResult}/>\r\n                    </div>\r\n                    <div className=\"bottom-pad\">\r\n                        <div className=\"bottom-pad-grid\">\r\n                        <Key keyboardKey='back' onTap={backSpace}/>\r\n                        <Key keyboardKey='0' onTap={()=>onButtonClick('0')}/>\r\n                        <Key keyboardKey='.' onTap={()=>onButtonClick('.')}/></div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","import './App.css';\nimport Calculator from './Calculator';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}