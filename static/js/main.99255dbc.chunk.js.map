{"version":3,"sources":["Key.js","Calculator.js","index.js"],"names":["Key","keyboardKey","color","onTap","className","onClick","style","Calculator","operations","useState","screenDigit","setscreenDigit","historyLog","sethistoryLog","onButtonClick","button","includes","charAt","prev","onOperationButtonClick","operationKey","checker","forEach","e","endsWith","generateRandomColor","randomColor","Math","floor","random","toString","reverse","map","history","index","length","wordWrap","fontSize","randomNum","num","result","Function","toFixed","console","log","substring","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAUeA,MARf,YAAyC,IAA3BC,EAA0B,EAA1BA,YAAYC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,MAC5B,OACI,qBAAKC,UAAU,MAAMC,QAASF,EAA9B,SACI,mBAAGG,MAAO,CAACJ,MAAMA,GAAjB,SAA0BD,OCkGvBM,MApGf,WACI,IAEMC,EAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACtC,EAAsCC,mBAAS,KAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,SAACC,GACJ,MAATA,GAAgBL,EAAYM,SAAS,OAGb,MAAxBN,EAAYO,OAAO,IACnBN,EAAe,IAEnBA,GAAe,SAAAO,GAAI,OAAEA,EAAOH,OAE1BI,EAAuB,SAACC,GAC1B,IAAIC,GAAQ,EAIZb,EAAWc,SAHG,SAACC,GACZb,EAAYc,SAASD,KAAKF,GAAQ,MAGjCA,GACJV,EAAeD,EAAcU,IA8B3BK,EAAoB,WACtB,IAAIC,EAAcC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAC9D,MAAM,IAAN,OAAWJ,IAEf,OACI,sBAAKtB,UAAU,aAAf,UACI,qBAAKA,UAAU,qBAAf,SACKQ,EAAWmB,UAAUC,KAAI,SAACC,EAAQC,GAAT,OAAiB,oBAAgB5B,MAAO,CAACJ,MAAMuB,KAA9B,SAAuDQ,GAA9CC,QAExD,sBAAK9B,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,6BAAKQ,EAAWA,EAAWuB,OAAO,KAClC,qBAAK/B,UAAU,SAASE,MAAO,CAAC8B,SAAS,cAAzC,SACA,oBAAI9B,MAAO,CAAC+B,SAAS,QAArB,SAA+B3B,SAGnC,sBAAKN,UAAU,WAAf,UACI,sBAAKA,UAAU,UAAf,UACA,cAAC,EAAD,CAAKH,YAAY,KAAKE,MA7CpB,WACdQ,EAAe,MA4CuCT,MAAM,YAChD,cAAC,EAAD,CAAKD,YAAY,IAAIE,MAAO,kBAAIgB,EAAuB,MAAMjB,MAAM,YACnE,cAAC,EAAD,CAAKD,YAAa,MAAOE,MA5BzB,WACZ,IAAImC,EAAwB,GAAdX,KAAKE,SACnBlB,EAAeD,EAAciB,KAAKC,MAAMU,UA6B5B,qBAAKlC,UAAU,cAAf,SACI,qBAAKA,UAAU,mBAAf,SA5ET,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GA6EE2B,UAAUC,KAAI,SAAAO,GAAG,OAAE,cAAC,EAAD,CAAgBtC,YAAasC,EAAKpC,MAAO,kBAAIW,EAAcyB,KAAjDA,UAI3C,sBAAKnC,UAAU,gBAAf,UAhFI,CAAC,IAAI,IAAI,IAAI,KAiFE4B,KAAI,SAAAZ,GAAY,OAAE,cAAC,EAAD,CAAwBjB,MAAO,kBAAIgB,EAAuBC,IAAelB,MAAM,UAAUD,YAAamB,GAA5FA,MAC3C,cAAC,EAAD,CAAKnB,YAAY,IAAIE,MAnDpB,WACjB,GAAyB,IAArBO,EAAYyB,OAAhB,CACA,IAAIK,EALG,IAAIC,SAAS,UAKH/B,EALV,GAMH8B,EAAOV,WAAWd,SAAS,KAC5BL,EAAe6B,EAAOE,QAAQ,GAAGZ,YAGlCnB,EAAe6B,EAAOV,YAGxBjB,EAAc,GAAD,mBAAKD,GAAL,WAAmBF,EAAnB,YAAkC8B,aA2CnC,qBAAKpC,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,cAAC,EAAD,CAAKH,YAAY,OAAOE,MAvC5B,WACZwC,QAAQC,IAAIlC,EAAYmC,UAAU,EAAEnC,EAAYyB,OAAO,IACvDxB,GAAe,SAAAO,GAAI,OAAEA,EAAK2B,UAAU,EAAGnC,EAAYyB,OAAS,SAsC5C,cAAC,EAAD,CAAKlC,YAAY,IAAIE,MAAO,kBAAIW,EAAc,QAC9C,cAAC,EAAD,CAAKb,YAAY,IAAIE,MAAO,kBAAIW,EAAc,uBCxFtEgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.99255dbc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Calculator.css'\r\nfunction Key({keyboardKey,color,onTap}) {\r\n    return (\r\n        <div className=\"key\" onClick={onTap} >\r\n            <p style={{color:color}}>{keyboardKey}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key\r\n","import {React, useState} from 'react'\r\nimport Key from './Key'\r\nimport './Calculator.css'\r\nfunction Calculator() {\r\n    const nums=[1,2,3,4,5,6,7,8,9];\r\n    const operationKeys=['/','*','-','+'];\r\n    const operations=['/','*','-','+','%','.'];\r\n    const [screenDigit, setscreenDigit] = useState('0');\r\n    const [historyLog, sethistoryLog] = useState([]);\r\n\r\n    const onButtonClick=(button) =>{  \r\n        if (button==='.' && screenDigit.includes('.')) {\r\n            return\r\n        }\r\n        if (screenDigit.charAt(0)==='0') {\r\n            setscreenDigit('')\r\n        }\r\n        setscreenDigit(prev=>prev + button);\r\n    }\r\n    const onOperationButtonClick=(operationKey)=>{\r\n        let checker=false;\r\n        const setbool=(e)=>{\r\n        if(screenDigit.endsWith(e)){ checker=true}\r\n        }\r\n        operations.forEach(setbool);\r\n        if (checker) return\r\n        setscreenDigit(screenDigit + operationKey);\r\n    }\r\n   \r\n    const clearScreen=()=>{\r\n        setscreenDigit('0')\r\n    }\r\n    function evil(fn) {\r\n        return new Function('return ' + fn)();\r\n      }\r\n      \r\n    const calulateResult=()=>{\r\n        if (screenDigit.length===1) return\r\n        let result =evil(screenDigit);\r\n        if (result.toString().includes('.')) {\r\n           setscreenDigit(result.toFixed(3).toString());\r\n        }\r\n        else{\r\n          setscreenDigit(result.toString());  \r\n        }\r\n        \r\n        sethistoryLog([...historyLog,`${screenDigit}=${result}`])\r\n    }\r\n    const randomNum=()=>{\r\n        let randomNum=Math.random()*10;\r\n        setscreenDigit(screenDigit + Math.floor(randomNum));\r\n    }\r\n    const backSpace=()=>{\r\n        console.log(screenDigit.substring(0,screenDigit.length-1));\r\n        setscreenDigit(prev=>prev.substring(0, screenDigit.length - 1));\r\n    }\r\n    const generateRandomColor=()=>{\r\n        let randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n        return `#${randomColor}`;\r\n    }\r\n    return (\r\n        <div className=\"calculator\">\r\n            <div className=\"history-log hidden\">\r\n                {historyLog.reverse().map((history,index)=><h2 key={index} style={{color:generateRandomColor()}}>{history}</h2>)}\r\n            </div>\r\n            <div className=\"calculator-body\">\r\n                <div className=\"screen\">\r\n                    <h4>{historyLog[historyLog.length-1]}</h4>\r\n                    <div className=\"result\" style={{wordWrap:\"break-word\"}}>\r\n                    <h2 style={{fontSize:'50px'}}>{screenDigit}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"keyboard\">\r\n                    <div className=\"top-pad\">\r\n                    <Key keyboardKey='AC' onTap={clearScreen} color='#229A89' />\r\n                    <Key keyboardKey='%' onTap={()=>onOperationButtonClick('%')} color='#229A89' />\r\n                    <Key keyboardKey={'Ran'} onTap={randomNum}/>\r\n\r\n                    </div>\r\n                    <div className=\"numbers-key\">\r\n                        <div className=\"numbers-key-grid\">\r\n                            {nums.reverse().map(num=><Key key={num}  keyboardKey={num} onTap={()=>onButtonClick(num)}/>)}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"operation-key\">\r\n                        {operationKeys.map(operationKey=><Key key={operationKey} onTap={()=>onOperationButtonClick(operationKey)} color='#D26C6F' keyboardKey={operationKey}/> )}\r\n                        <Key keyboardKey='=' onTap={calulateResult}/>\r\n                    </div>\r\n                    <div className=\"bottom-pad\">\r\n                        <div className=\"bottom-pad-grid\">\r\n                        <Key keyboardKey='back' onTap={backSpace}/>\r\n                        <Key keyboardKey='0' onTap={()=>onButtonClick('0')}/>\r\n                        <Key keyboardKey='.' onTap={()=>onButtonClick('.')}/></div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}